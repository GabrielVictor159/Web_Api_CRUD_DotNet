name: dockercompose17582886479543849482
services:
  adminer:
    image: adminer
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
    restart: always
  dbPedido:
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: postgres
    networks:
      ecomerce: null
    ports:
    - mode: ingress
      target: 5432
      published: "5434"
      protocol: tcp
    restart: always
  rabbitmq:
    image: rabbitmq:management
    networks:
      ecomerce: null
    ports:
    - mode: ingress
      target: 5672
      published: "5673"
      protocol: tcp
    - mode: ingress
      target: 15672
      published: "15672"
      protocol: tcp
    restart: always
  web_api_crud:
    build:
      context: C:\Nova pasta (2)\Web_Api_CRUD
      dockerfile: API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Web_Api_CRUD
      target: base
    container_name: Web_Api_CRUD
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DBCONN: Server=dbPedido;Port=5432;Database=postgres;User Id=postgres;Password=postgres
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages
    image: webapicrud:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/bin/Debug/net7.0/Web_Api_CRUD.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      ecomerce: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Nova pasta (2)\Web_Api_CRUD\API
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Gabriel Victor\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Gabriel Victor\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Gabriel Victor\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
      target: /root/.nuget/fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Gabriel Victor\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Nova pasta (2)\Web_Api_CRUD
      target: /src
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose17582886479543849482_default
  ecomerce:
    name: dockercompose17582886479543849482_ecomerce
    driver: bridge