name: dockercompose17582886479543849482
services:
  adminer:
    image: adminer
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
    restart: always
  dbPedido:
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: postgres
    networks:
      ecomerce: null
    ports:
    - mode: ingress
      target: 5432
      published: "5434"
      protocol: tcp
    restart: always
  rabbitmq:
    image: rabbitmq:management
    networks:
      ecomerce: null
    ports:
    - mode: ingress
      target: 5672
      published: "5673"
      protocol: tcp
    - mode: ingress
      target: 15672
      published: "15672"
      protocol: tcp
    restart: always
  web_api_crud:
    build:
      context: C:\Nova pasta (2)\Web_Api_CRUD
      dockerfile: API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      DBCONN: Server=dbPedido;Port=5432;Database=postgres;User Id=postgres;Password=postgres
    image: webapicrud
    networks:
      ecomerce: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Gabriel Victor\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Gabriel Victor\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose17582886479543849482_default
  ecomerce:
    name: dockercompose17582886479543849482_ecomerce
    driver: bridge